#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <ctime>
#include <vector>
#include <cstring>
#include <queue>

using namespace std;

int n;


void BFSD(int v, int* DIST, int** a)
{
    queue <int> Q;
    Q.push(v);
    DIST[v]=0;

    while (!Q.empty()) {
        v = Q.front();
        Q.pop();
        cout << v <<" ";

        for (int i = 0; i <= n; i++)
        {
            if ((a[v][i] == 1) && (DIST[i] == -1))
            {
                Q.push(i);
                DIST[i]=DIST[v]+1;
            }
        }
    }

}

int main()
{
    setlocale(LC_ALL, "rus");
    srand(time(NULL));
    int v;

    cout << "Введите количество вершин: " << endl;
    cin >> n; cout << endl;

    int** a = new int* [n];

    for (int i = 0; i <= n; i++)
    {
        a[i] = new int[n];
    }

    for (int i = 1; i <= n; i++) //ЗАПОЛНЕНИЕ МАТРИЦЫ
        for (int j = 1; j <= n; j++)
        {
            a[i][j] = a[j][i] = rand() % 2;
        }

    for (int i = 0; i <= n; i++)
        a[i][i] = 0;

    for (int i = 1; i <= n; i++) //ВЫВОД МАТРИЦЫ
    {
        for (int j = 1; j <= n; j++)
        {
            cout << a[i][j] << " ";
        }
        cout << endl;
    }

    int* DIST = new int [n];

    for (int i = 0; i <= n; i++) DIST[i] = -1;

    cout << "Стартовая вершина >> "; cin >> v;

    cout << endl << "Порядок обхода: ";

    BFSD(v, DIST, a);
    cout << endl;

    
    cout << endl << "Расстояние: ";
    for (int i = 0; i <= n; i++)
    {
        if (DIST[i]!=-1) cout << DIST[i] << " ";
    }
}
